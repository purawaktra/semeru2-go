@startuml
'https://plantuml.com/sequence-diagram

participant Router
participant RequestHandler as rh
participant Controller as ctrl
participant Function as func
participant UseCase as uc
participant Repository as repo

Router -> rh : SelectCredentialById(context)
Router -> rh : SelectCredentialByEmail(context)
Router -> rh : CreateCredential(context)
Router -> rh : UpdateCredential(context)
Router -> rh : DeleteCredential(context)
rh -> func : ValidateRequestId(header)
func --> rh : nil
func x--> rh : error
rh -> ctrl : SelectCredentialById(request)
rh -> ctrl : SelectCredentialByEmail(request)
rh -> ctrl : CreateCredential(request)
rh -> ctrl : UpdateCredential(request)
rh -> ctrl : DeleteCredential(request)
ctrl -> func : BindAndValidate(payload)
func --> ctrl : dto, nil
func x--> ctrl : nil, error
ctrl x--> rh : response, error
rh x--> Router : 400, error response
ctrl -> uc : SelectCredentialById(dto)
uc -> repo : SelectCredentialById(entity)
ctrl -> uc : SelectCredentialByEmail(dto)
uc -> repo : SelectCredentialByEmail(entity)
repo --> uc : Credential, nil
uc --> ctrl : Credential, nil
ctrl --> rh : response, nil
rh --> Router : 200, OK response
repo x--> uc : nil, error
uc x--> ctrl : nil, error
ctrl x--> rh : response, error
rh x--> Router : 400, error response
ctrl -> uc : InsertCredential(dto)
uc -> repo : InsertCredential(entity)
ctrl -> uc : UpdateCredential(dto)
uc -> repo : UpdateCredential(entity)
ctrl -> uc : DeleteCredential(dto)
uc -> repo : DeleteCredential(entity)
repo --> uc : nil
uc --> ctrl : nil
ctrl --> rh : response, nil
rh --> Router : 200, OK response
repo x--> uc : error
uc x--> ctrl : error
ctrl x--> rh : response, error
rh x--> Router : 400, error response

@enduml
